2013-03-20  Jack Howarth  <howarth@bromo.med.uc.edu>

	PR bootstrap/56258
	* doc/c-tree.texi (POINTER_PLUS_EXPR): Use @item instead of @itemx.
	(PLUS_EXPR): Likewise.
	* doc/cppopts.texi (--help): Likewise.
	* doc/invoke.texi (-fenable-@var{kind}-@var{pass}): Likewise
	(-fdump-rtl-cprop_hardreg): Likewise.
	(-fdump-rtl-csa): Likewise.
	(-fdump-rtl-dce): Likewise.
	(-fdump-rtl-dbr): Likewise.
	(-fdump-rtl-into_cfglayout): Likewise.
	(-fdump-rtl-outof_cfglayout): Likewise.
	(@gccoptlist): Move misplaced bracket.
	* doc/sourcebuild.texi (all.cross): Use @item instead of @itemx.

--- gcc/doc/c-tree.texi	(revision 196819)
+++ gcc/doc/c-tree.texi	(revision 196820)
@@ -2338,13 +2338,13 @@ generate these expressions anyhow, if it
 not matter.  The type of the operands and that of the result are
 always of @code{BOOLEAN_TYPE} or @code{INTEGER_TYPE}.
 
-@itemx POINTER_PLUS_EXPR
+@item POINTER_PLUS_EXPR
 This node represents pointer arithmetic.  The first operand is always
 a pointer/reference type.  The second operand is always an unsigned
 integer type compatible with sizetype.  This is the only binary
 arithmetic operand that can operate on pointer types.
 
-@itemx PLUS_EXPR
+@item PLUS_EXPR
 @itemx MINUS_EXPR
 @itemx MULT_EXPR
 These nodes represent various binary arithmetic operations.
--- gcc/doc/cppopts.texi	(revision 196819)
+++ gcc/doc/cppopts.texi	(revision 196820)
@@ -758,7 +758,7 @@ Replacement:      [    ]    @{    @}
 Enable special code to work around file systems which only permit very
 short file names, such as MS-DOS@.
 
-@itemx --help
+@item --help
 @itemx --target-help
 @opindex help
 @opindex target-help
--- gcc/doc/invoke.texi	(revision 196819)
+++ gcc/doc/invoke.texi	(revision 196820)
@@ -4749,11 +4749,11 @@ Dump after duplicating the computed goto
 @option{-fdump-rtl-ce3} enable dumping after the three
 if conversion passes. 
 
-@itemx -fdump-rtl-cprop_hardreg
+@item -fdump-rtl-cprop_hardreg
 @opindex fdump-rtl-cprop_hardreg
 Dump after hard register copy propagation.
 
-@itemx -fdump-rtl-csa
+@item -fdump-rtl-csa
 @opindex fdump-rtl-csa
 Dump after combining stack adjustments.
 
@@ -4764,11 +4764,11 @@ Dump after combining stack adjustments.
 @option{-fdump-rtl-cse1} and @option{-fdump-rtl-cse2} enable dumping after
 the two common sub-expression elimination passes.
 
-@itemx -fdump-rtl-dce
+@item -fdump-rtl-dce
 @opindex fdump-rtl-dce
 Dump after the standalone dead code elimination passes.
 
-@itemx -fdump-rtl-dbr
+@item -fdump-rtl-dbr
 @opindex fdump-rtl-dbr
 Dump after delayed branch scheduling.
 
@@ -4813,7 +4813,7 @@ Dump after the initialization of the reg
 @opindex fdump-rtl-initvals
 Dump after the computation of the initial value sets.
 
-@itemx -fdump-rtl-into_cfglayout
+@item -fdump-rtl-into_cfglayout
 @opindex fdump-rtl-into_cfglayout
 Dump after converting to cfglayout mode.
 
@@ -4843,7 +4843,7 @@ Dump after removing redundant mode switc
 @opindex fdump-rtl-rnreg
 Dump after register renumbering.
 
-@itemx -fdump-rtl-outof_cfglayout
+@item -fdump-rtl-outof_cfglayout
 @opindex fdump-rtl-outof_cfglayout
 Dump after converting from cfglayout mode.
 
@@ -4855,7 +4855,7 @@ Dump after the peephole pass.
 @opindex fdump-rtl-postreload
 Dump after post-reload optimizations.
 
-@itemx -fdump-rtl-pro_and_epilogue
+@item -fdump-rtl-pro_and_epilogue
 @opindex fdump-rtl-pro_and_epilogue
 Dump after generating the function pro and epilogues.
 
--- gcc/doc/sourcebuild.texi.jj	2010-05-25 18:19:29.000000000 -0400
+++ gcc/doc/sourcebuild.texi	2013-07-20 22:00:49.715657448 -0400
@@ -573,7 +573,7 @@ standard rule in @file{gcc/Makefile.in}
 @code{lang_checks}.
 
 @table @code
-@itemx all.cross
+@item all.cross
 @itemx start.encap
 @itemx rest.encap
 FIXME: exactly what goes in each of these targets?
